Reference counting for child/parents
-> now if a parent gets freed, all its childs gets freed aswell, even if it had more parents

Be able to catch scope changes

Named allocations for debugging

Difference error/warning

Refactor: Create interfaces for all core functions so that code isn't repeated 10 times

Check errors on parents/child additions

Check for circular dependencies

Optimize freeing by skipping updating childs/parents for pointers that will be freed

Create a gc_ifree() for pointers that are sure not to have childs (for internal use)